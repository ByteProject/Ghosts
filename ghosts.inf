!% -~S
!% $OMIT_UNUSED_ROUTINES=1
!% $MAX_ABBREVS=96
!% $TRANSCRIPT_FORMAT=1
!% -r
! ----------------------------------------------------------------------------
!  THE GHOSTS OF BLACKWOOD MANOR
!  An interactive Horror by Stefan Vogt
!  Copyright (C) 2022 Fusion Retro Books / ZZAP!64 
!  http://8bitgames.itch.io
! ----------------------------------------------------------------------------

! IFID (http://babel.ifarchive.org) -- generate with https://uuidgenerator.net
Array UUID_ARRAY string "UUID://xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx//";
#Ifdef UUID_ARRAY; #Endif;

Switches e; ! Use Economize mode
Include ">abbrvs_generic.h";

Constant Story "The Ghosts of Blackwood Manor";
Constant Headline "^An interactive Horror by Stefan Vogt^\
                    (C) 2022 Fusion Retro Books / ZZAP!64^";
Release 1;

! game-specific defines
Constant DEBUG; ! deactivate for release
Constant CUSTOM_ABBREVIATIONS;
Constant MAX_CARRIED = 20;
Constant OPTIONAL_SCORED;
Constant OPTIONAL_FULL_SCORE;
Constant OBJECT_SCORE = 3;
Constant ROOM_SCORE = 3;
Constant MAX_SCORE 10;
!Constant OPTIONAL_MANUAL_REACTIVE;
!Constant OPTIONAL_MANUAL_SCOPE;
Constant INITIAL_LOCATION_VALUE = GreatHall;
#ifV5;
Constant OPTIONAL_PROVIDE_UNDO; ! undo opcode is only supported in Z-machine v5 spec
#endif;

! 0 production build, 1 notification on errors, 2 full error messages
Constant RUNTIME_ERRORS = 0;

! routine overrides
Replace PronounNotice;
#ifV5;
Replace DrawStatusLine; ! replace Puny's routine for Infocom interpreter compatibility
#endif;

Include "globals.h";
#ifV5;
Include "ext_quote_box.h";
#endif;

! recurring messages and conversations (self-defined)
Constant MESS_TURN_SELF "Now you feel dizzy. You've had better ideas than that.";
Constant MESS_SCENERY "You needn't worry about that.";
Constant MESS_DOORS "It's the kind of old wooden door you often see in or around Blackwood Manor.";

! messages (lib-overrides)
Constant MSG_PROMPT 1000;
Constant MSG_TAKE_ANIMATE 1001;
Constant MSG_EAT_ANIMATE 1002;
Constant MSG_PARSER_NO_INPUT 1003;
Constant MSG_PARSER_UNKNOWN_VERB 1004;
Constant MSG_PARSER_CANT_SEE_SUCH_THING 1005;
Constant MSG_PARSER_DONT_UNDERSTAND_WORD 1006;
Constant MSG_LOOK_BEFORE_ROOMNAME 1007;
Constant MSG_FILL_NO_WATER 1008;
Constant MSG_INSERT_NOT_CONTAINER 1009;
Constant MSG_EMPTY_CANT_CONTAIN 1010;
Constant MSG_OPEN_YOU_CANT 1011;
Constant MSG_PARSER_NO_NEED_REFER_TO 1012;
[LibraryMessages p_msg p_arg_1 p_arg_2;
 switch(p_msg) {
    MSG_PROMPT:
      print ">";
      p_arg_1 = p_arg_2;
    MSG_TAKE_ANIMATE, MSG_EAT_ANIMATE:
      "Do you think ", (the) noun, " would like that?";
    MSG_PARSER_NO_INPUT:
      "You won't get very far without input. You know that, right?^";
    MSG_PARSER_UNKNOWN_VERB:
      "You've used an unknown verb. Could you try something else?";
    MSG_PARSER_CANT_SEE_SUCH_THING:
      "You don't see that here.";
    MSG_PARSER_DONT_UNDERSTAND_WORD:
      print "This game understands many words but ";
			print "~";
			_PrintUnknownWord();
			print_ret "~ is unfortunately not one of them.";
    MSG_LOOK_BEFORE_ROOMNAME:
      @new_line; ! mimics Inform style location texts, disable for Infocom style
    MSG_FILL_NO_WATER:
      "That doesn't seem to work. Are you referring to an object that can be filled with liquid? Please refer to the usage of the fill command by typing [fill object].";
    MSG_INSERT_NOT_CONTAINER,
    MSG_EMPTY_CANT_CONTAIN:
      print_ret "Either this object can't contain any things or doing it won't help you progress in this game.";
    MSG_OPEN_YOU_CANT:
      "That doesn't seem to be something you can ", (verbname) p_arg_1, ".";
    MSG_PARSER_NO_NEED_REFER_TO:
      print_ret (string)MESS_SCENERY;
   }
 rfalse;
];

[PrintRank; ! this uses Puny's PrintRank feature
  print ", earning you the rank: ";
  if (score >= 10) "The Ten Commandments.";
  if (score >= 5) "High Five.";
  if (score >= 1) "The chosen One.";
  "Absolute Zero.";
];

Array quote_1 --> 8 33
"Towards new and different shores,"
"forever driven onward. Through"
"endless darkness, always borne" 
"away. Upon the sea of time can"
"we not lie at anchor, for but a"
"single day?"
"                               "
"       -- Alphonse de Lamartine";

! flags (in the form of globals, which is very memory efficient)
! Global F_HELP = 0; ! asks player to type HELP when the game starts

! will be triggered when the room is described
! [ LookRoutine;
! ];

! will be triggered when you visit a new room
! [ NewRoom;
! ];

Include "puny.h";

! set this for non-animate objects that may be referred to with "him"
Attribute male;

! limbo for objects that we don't need anymore, beware of the grues!
Object Limbo;

! classes
Class Room;      ! inside locations (walls in scope)
Class Outside;   ! outside locations
Class Character;  ! character class for NPCs

! walls will be an object we put in scope on demand
Object walls "walls"
  with name 'wall' 'walls//p',
      description "You check the walls without gaining any new insights.",
      before [;
          Attack:
            "There is surely a better way to deal with frustration.";
          Turn:
            "The walls? Are you serious?";
          Push, Pull:
            "The walls won't move.";
      ],
      found_in [;
            if (location ofclass Room) rtrue;
            if (location ofclass Outside) rfalse;
      ],
  has pluralname scenery;

Room GreatHall "Great Hall" ! -- locations start here
  with name 'great' 'hall' 'manor' 'blackwood' 'living' 'room',
      description "This part of the manor is said to date back to the 8th century. Blackwood was built on the remains of an ancient monastery. These days the great hall is used as a living room, whose Victorian-style interior makes a cozy impression. Flames dance in the fireplace and wood crackles as it slowly burns, spreading a pleasant warmth. Flickering light wanders across the walls, engulfing the shadows and illuminating the room in melancholy twilight. In one corner, right below the ancestral gallery, is a beautifully decorated Christmas tree. Through the large windows you can see a snowstorm raging, the wind howls while waves of snowflakes pass by in streaks. The sole exit lies to the north, leading to the vestibule.",
      n_to Vestibule,
  has light;
   
Object -> vicinterior,
  with name 'victorian' 'style' 'victorian-style' 'interior' 'furniture',
        description "Just as one would imagine an old country house to be. The intricately decorated and lovingly handcrafted pieces of furniture do not seem to be replicas, although you first assumed so because they are in impeccable condition. Witnesses of a bygone era with an inestimable value.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

Object -> fireplace,
  with name 'fireplace' 'fire' 'wood' 'flames' 'warmth' 'twilight',
        description "For a second you lose yourself in the flames, immersed in the eternal struggle between darkness and light. How many generations must have warmed themselves here over the centuries? What were their worries, their hardships, as they lingered within these venerable walls? For a brief moment we shine brighter than the morning star, but when the Grim Reaper knocks on our door, he leads us back to the infinite gloom from which we once emerged.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

Object -> xmastree,
  with name 'corner' 'christmas' 'xmas' 'tree' 'decorated' 'scottish' 'fir' 'decorations',
        description "The tree, a Scottish fir, looks wonderful in its red and white Christmas decorations. Polly has really outdone herself this year.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

Object -> ancestgallery,
  with name 'ancestral' 'gallery' 'portraits' 'lords' 'ladies' 'pictures',
        description "Fascinated, you look at the many portraits of the former Lords and Ladies of Blackwood. There must be some clues in the manor's library to find out who they depict. Judging by their clothes, however, they are all long gone. The way of all flesh.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

Object -> snowstorm,
  with name 'large' 'windows' 'snowstorm' 'wind' 'snowflakes' 'streaks' 'window' 'pane' 'panes',
        description "The window panes rattle from the force of the storm. Heavy snowflakes swirl in the air and blanket the manor's feral garden and the surrounding forest in a white layer.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

  Object -> gardenfromwindow,
  with name 'feral' 'garden',
        description "You definitely have to take care of the garden next spring. It has apparently been neglected a bit in the last few years, but it is not completely overgrown.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

  Object -> forestfromwindow,
  with name 'surrounding' 'forest',
        description "The adjacent forest surely holds many secrets, some of which may one day be rediscovered, others will remain hidden forever, buried and forgotten witnesses to a dark past.",
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

  Object -> exitgreathall,
  with name 'exit' 'door',
      description [;
          print_ret (string)MESS_DOORS; 
      ],
    before [;
      Examine:
        rfalse;
      default:
        print_ret (string)MESS_SCENERY; 
    ],
  has scenery;

Room TheChapel "The Chapel"
  with name 'chapel',
        description "The silence is almost palpable, adding to the sense of reverence that pervades this sacred place. Your footsteps echo softly off the cold, rough stone walls. Occasionally you can hear the creak of old wood. Rows of pews stretch out before you. The large altar is the centrepiece here, drawing your eyes towards it with its grandeur and attention to detail. Above a large wooden crucifix, its once gilded surface now dulled with age. Behind the altar are niches with stained glass windows depicting scenes from the Bible. The colours of the glass are muted and subdued, casting a soft, warm light on the chapel floor. One wonders how many prayers and moments of reflection the chapel has witnessed over the centuries. Doors to the south and south-west lead to the oratory and sacristy, while the exit to the north takes you back to the vestibule.",
        n_to Vestibule,
        s_to Sacristy,
        sw_to Oratory,
        d_to Undercroft,
  has light;

Room Oratory "Oratory"
  with name 'oratory',
        description "The oratory was used by the Lord and his family for private prayer and contemplation. A wooden cross hangs from the wall, with a single pew in front of it. An alcove on the left catches the eye, with a beautifully carved statue of a saint, surrounded by a small collection of candles and dried flowers. The saint is depicted with a serene expression, holding a book and a cross, with eyes gazing towards the heavens. A small plaque beside the statue reads ~St. Margaret of Scotland.~ An exit to the north leads back to the chapel.",
        n_to TheChapel,
  has light;

Room Vestibule "Vestibule"
  with name 'vestibule',
        description "As you step into the vestibule, you can't help but feel a sense of awe. The high ceiling is supported by grand columns and arches, and the walls are adorned with intricate carvings and tapestries. The area is dimly lit by light bulbs in wall sconces, casting long shadows across the stone floor. You see an enormous wooden door to the west, leading to the outside, its surface polished to a shine by centuries of use. Left of the door, a stone staircase spirals upward to the upper levels of the manor.",
        n_to Library,
        s_to GreatHall,
        e_to Kitchen,
        w_to Forecourt,
        sw_to TheChapel,
        u_to Corridor,
  has light;

Room Sacristy "Sacristy"
  with name 'sacristy',
        description "You find yourself in a small, dimly lit room. The walls are lined with wooden shelves, filled with old, leather-bound books. The scent of incense hangs heavily in the air. In the center of the sacristy is a large wooden table, covered with a green velvet cloth. On the table, you see a chalice, a censer and a paten, all of which appear to be made of gold. You notice a chest with iron fittings containing a set of vestments made of richly embroidered silk and a small cabinet, the front of which has been decorated with an elaborate painting (Deathscene Golgotha). It containes the oil and balm used for anointing the sick and dying. A sole exit to the north takes you back to the chapel.",
        n_to TheChapel,
  has light;

Room Kitchen "Kitchen"
  with name '' '',
        description "",
        n_to Storeroom,
        s_to Buttery,
        e_to Pantry,
        w_to Vestibule,
  has light;

Room Pantry "Pantry"
  with name '' '',
        description "",
        w_to Kitchen,
  has light;

Room Buttery "Buttery"
  with name '' '',
        description "",
        n_to Kitchen,
  has light;

Room Storeroom "Storeroom"
  with name '' '',
        description "",
        s_to Kitchen,
  has light;

Room Library "Library"
  with name '' '',
        description "",
        s_to Vestibule,
  has light;

Outside Forecourt "Forecourt"
  with name '' '',
        description "",
        e_to Vestibule,
        ne_to FeralGarden,
  has light;

Outside FeralGarden "Feral Garden"
  with name '' '',
        description "",
        n_to ForestRoad,
        w_to Dovecote,
        sw_to Forecourt,
  has light;

Outside ForestRoad "Forest Road"
  with name '' '',
        description "",
        s_to FeralGarden,
        nw_to Ruins,
  has light;

Room Dovecote "Dovecote"
  with name '' '',
        description "",
        e_to FeralGarden,
  has light;

Outside Ruins "Ruins"
  with name '' '',
        description "",
        n_to OvergrownCemetary,
        se_to ForestRoad,
        d_to Cellar,
  has light;

Room Cellar "Cellar"
  with name '' '',
        description "",
        u_to Ruins,
   has  ~light;

Outside OvergrownCemetary "Overgrown Cemetary"
  with name '' '',
        description "",
        s_to Ruins,
  has light;

Room Undercroft "Undercroft"
  with name '' '',
        description "",
        e_to SecretPassage,
        ne_to Crypt,
        u_to TheChapel,
   has  ~light;

Room SecretPassage "Secret Passage"
  with name '' '',
        description "",
        e_to Dungeon,
        w_to Undercroft,
   has  ~light;

Room Crypt "Crypt"
  with name '' '',
        description "",
        s_to Undercroft,
  has light;

Room Dungeon "Dungeon"
  with name '' '',
        description "",
        w_to SecretPassage,
   has  ~light;

Room Corridor "Corridor"
  with name '' '',
        description "",
        n_to Lounge,
        s_to TheSolar,
        nw_to Bathroom,
        d_to Vestibule,
  has light;

Room TheSolar "The Solar"
  with name '' '',
        description "",
        n_to Corridor,
        e_to Wardrobe,
  has light;

Room Wardrobe "Wardrobe"
  with name '' '',
        description "",
        w_to TheSolar,
  has light;

Room Bathroom "Bathroom"
  with name '' '',
        description "",
        s_to Corridor,
  has light;

Room Lounge "Lounge"
  with name '' '',
        description "",
        s_to Corridor,
  has light;

[EndingSequence;
  print "^Just as quickly as it began, it ended. What a shame.";
  deadflag = 2; ! you have won!
];

[ Initialise; ! init vars and start the game
  score = 0; ! your score is at 0 when you start the game, which kinda makes sense
  notify_mode = false; ! deactivate score notifications if set false
  lookmode = 2; ! activate verbose look mode

  thedark.description = "It is pitch black. You are likely to be eaten by a grue."; ! I hail you, Infocom!

  player.before = PlayerBefore; ! player.before override, see routine implementation
  player.parse_name = PlayerParseName; ! own routine that parses the player's name
  player.description = "There you are, a ghost in a shell, surrounded by a sea of shells.";

  QuoteBox(quote_1);
  print "Writer's block. What a terrible condition. And the pressure builds as everyone waits for the next big thing. Interesting how everything changes as you get older. All your books have been written in New York, but over the years the city has seemed to stifle you, to cast a dark veil over your inspiration. Your publisher suggested a change of scenery, perhaps somewhere rural. You considered Maine and checked out some really great houses with Polly. One was even near the coast. But fate had other plans. You knew about your Scottish roots, but you had never really delved into your family history. So it was quite a surprise when you got a call from a notary in Iverness. A second-degree great-aunt you never knew had recently died and, as her last surviving relative, you were declared the sole heir to her estate, in particular the historic Blackwood House, your ancestors' country manor in the Scottish Highlands. It's been a few days since you moved in and you've had little time to explore the property. Christmas is just around the corner and the moving boxes are still piling up. The solitude out here is already balm for the soul. You might even manage to write a few lines during the contemplative Christmas days. How about a ghost story?^^";
];

#ifdef DEBUG;
  [ CheatmodeSub; ! hic sunt dracones... trigger with 'aenima' magic verb in debug mode
    PlayerTo(GreatHall);
    MoveFloatingObjects();
  ];
#endif;

! adding the ability of making non-animate objects referred to with "him" or "her"
[ PronounNotice p_object;
	if (p_object == 0 or player or Directions) return;
	if (p_object has pluralname) {
    themobj = p_object;
	}
  else if (p_object has male or female or neuter) {
    SetPronoun(p_object);
  }
  else if (p_object has animate) {
    SetPronoun(p_object);
	}
  else itobj = p_object;
];

[ SetPronoun p_object;
  if (p_object has female) herobj = p_object;
	else if (p_object has neuter) itobj = p_object;
	else himobj = p_object;
];

#ifV5;
! we use our own routine as Puny's might cause Infocom z5 terps to misbehave
[ DrawStatusLine width posa s1 s2; !
   @split_window 1; @set_window 1; @set_cursor 1 1; style reverse;
   width = 0->33;
   SpeedSpaces (width);
   @set_cursor 1 2; _PrintObjName(location);
   if (width > 76)
   {
	   s1 = NumWidth(status_field_1);
	   s2 = NumWidth(status_field_2);
	   posa = width-26;
	   @set_cursor 1 posa;
	   print " Score: ", status_field_1;
	   SpeedSpaces(6-s1);
       print "Moves: ", status_field_2;
	   SpeedSpaces(6-s2);
   }
   else if (width > 39)
   {
	   s1 = NumWidth(status_field_1);
	   s2 = NumWidth(status_field_2);
	   posa = width - 9 - s1 - s2;
	   @set_cursor 1 posa;
	   print " Score: ", status_field_1, "/", status_field_2;
	   @print_char ' ';
   }
   @set_cursor 1 1; style roman; @set_window 0;
];

[NumWidth num width;
	width = 1;
	if(num < 0) {
		width++;
		num = -num;
	}
	if(num >= 10)
	{
	   width++;
	   if(num >= 100)
	   {
		   width++;
		   if(num >= 1000)
		   {
			   width++;
		   }
	   }
	}
	return width;
];

[ SpeedSpaces p_spaces; ! stolen from Puny's ext_menu.h
	while(p_spaces > 10) {
		@print_table TenSpaces 10 1;
		p_spaces = p_spaces - 10;
	}
	@print_table TenSpaces p_spaces 1;
];
#endif;

[ AboutSub;
  print_ret (string)Story, " is copyright (c) 2021 by Your Name.^^You may freely distribute the game, but you have to link to <youramazingurl.com>. This work may not be sold or included in any for-profit collection without written permission from the author.^^Please send bug reports to ", "<me@@64","mymail.com>.^^For acknowledgements and credits, please type ~credits~.";
];

[ CreditsSub;
  print_ret (string)Story, " is dedicated to literally no one.^^~Try to be like the turtle - at ease in your own shell.~ -- Bill Copeland^^Beta testers: Mom, Dad, Aunt Gertrud, Will from the butcher shop.^^This game was created using the Inform language by Graham Nelson and it utilizes PunyInform, a custom library by Fredrik Ramsberg and Johan Berntsson.";
];

[ UseSub;
  "The verb [use] is not something you need to refer to in the course of this game. Be more specfic. Here are a few common examples:^^[operate computer],^you can [talk to someone] or [ask someone],^and [insert floppy in drive].";
];

[ HelpSub;
  print_ret "The ", (string)Story, " package contains a PlayIF card that explains the basic gameplay and many synonyms will enhance what you read on it. There are a few extra verbs necessary but these will be introduced to you in advance. You never have to guess the verb.^^Conversations are not as complex as in Infocom titles. It is sufficient to type [talk to NPC] or [ask NPC].^^Use the [save] command to store your progress and [restore] to load it again.";
];

[ XyzzySub;
  "You perceive a mysterious whisper. Coming from everywhere and nowhere, yet present, it says ~Nice try.~";
];

[ LookUnderSub;
  "You don't have to look under any objects in this game. The only two verbs you need in this context are [examine] and [search].";
];

#ifV3;
[ UndoSub;
  "This version of the game does not support the UNDO command.";
];
#endif;

[ UnlockWithoutKeySub;
  if (noun has lockable) print_ret "Try being more specific. You probably want to unlock ", (the) noun, " with a certain object?";
  "You cannot unlock this object.";
];

[ TypeSub;
  "That's not an object on which you can type something.";
];

[ TypeErrSub;
  print "You'll need to be more specific. The type command wants you to provide a number or a string and an object to type it on.^^[type 1234 or ABCD on/into object]^";
  noun = false;
];

! if not overridden by a before routine, TURN NOUN LEFT/RIGHT will invoke a regular TURN NOUN
[ TurnLeftSub;
  <<Turn noun>>;
];

[ TurnRightSub;
  <<Turn noun>>;
];

[ TurnAroundSub;
  print_ret (string)MESS_TURN_SELF;
];

[ TalkSub;
  if (noun == player) "Nothing you hear surprises you.";
  if (~~(noun ofclass Character)) "Generally, it's best to talk to living things.";
  if (noun ofclass Character && noun hasnt animate) "You once saw a movie with someone who was able to talk to the dead. You don't expect a reply in this particular case so you let it be.";
  if (RunLife(noun,##Talk) ~= 0) rfalse;
  print_ret "At the moment, you can't think of anything to say to ", (the) noun, ".";
];

[ InteractSub;
  if (noun == nothing) noun = second;
  print_ret "Please use [talk to ", (the) noun, "] for this type of interaction.";
];

[ InteractErrorSub;
  print_ret "That doesn't seem to make any sense. Please use [talk to someone/something] for this type of interaction.";
];

[ PlayerBefore;
    Turn:
      print_ret (string)MESS_TURN_SELF;
    Attack:
      "As hopeless as the situation may be, this is never a way out.";
    default:
      rfalse;
];

[ PlayerParseName n;
		n=0;
		while (NextWord()=='me' or 'myself' or 'self' or 'yourself') {n++;}
		return n;
];

[ FillErrorSub;
  "The fill command wants you to be more specific.^^[fill object with liquid]";
];

#ifdef DEBUG;
Verb 'aenima' * -> Cheatmode;
#endif;

Verb 'about' * -> About;
Verb 'credits' * -> Credits;
Verb 'help' * -> Help;

Verb 'use' * -> Use
           * noun -> Use
           * noun 'with'/'on'/'in'/'at' noun -> Use;

Verb 'xyzzy' * -> Xyzzy;

#ifV3;
Verb 'undo' * -> Undo;
#endif;

Verb 'type'  * -> TypeErr
             * special -> TypeErr
             * special 'on'/'into'/'in' -> TypeErr
             * special 'on'/'into'/'in' noun -> Type;

Extend 'turn' * noun 'left' -> TurnLeft
              * noun 'right' -> TurnRight;
Extend 'turn' * 'around' -> TurnAround;
Extend 'turn' * 'over' noun -> Turn;

Extend 'examine' * 'back' 'of' noun -> Turn;

Extend 'look' * 'under' noun -> LookUnder;
Extend 'look' * 'through'/'out' noun -> Examine;
Extend 'look' * 'out' 'of' noun -> Examine;

Extend 'unlock' first * noun -> UnlockWithoutKey;

Extend 'attack' * held 'at'/'on' noun -> Attack;

Extend 'fill' replace
  * noun -> FillError
  * held 'with' noun -> Fill
  * noun 'in'/'into' held -> Fill;

Extend 'speak' replace
  * noun -> Talk
  * 'to'/'with' noun -> Talk
  * topic 'to' noun -> Interact
  * topic -> InteractError;

Extend 'ask' replace
  * noun -> Talk
  * noun 'for' noun -> AskFor
  * noun 'about' topic -> Interact
	* noun 'to' topic -> Interact
  * 'that' noun topic -> Interact;

Extend 'tell' replace
	* noun 'about' topic -> Interact
	* noun 'to' topic -> Interact;

Extend 'eat' replace
    * creature -> Eat
    * held -> Eat;

Verb meta 'continue' = 'again';
Verb 'grab' = 'take';
Verb 'kick' = 'attack';
Verb 'flip' = 'turn';
Verb 'talk' = 'speak';
Verb 'consult' = 'open';
Verb 'shoot' = 'attack';
Verb 'stab' = 'cut';
Verb 'pour' = 'fill';

end;
