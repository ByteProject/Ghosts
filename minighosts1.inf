!% -~S
!% $OMIT_UNUSED_ROUTINES=1
!% $MAX_ABBREVS=96
!% $TRANSCRIPT_FORMAT=1
!% $ZCODE_LESS_DICT_DATA=1
!% -r
!% -e
!% $OMIT_SYMBOL_TABLE=1
! ----------------------------------------------------------------------------
!  MINI-GHOSTS OF BLACKWOOD MANOR
!  An interactive Horror by Stefan Vogt
!  Copyright (c) 2023 Moonmist Entertainment
!  and Fusion Retro Books / ZZAP!64 
!  http://8bitgames.itch.io
! ----------------------------------------------------------------------------

! IFID (http://babel.ifarchive.org) -- generate with https://uuidgenerator.net
Array UUID_ARRAY string "UUID://065abec8-549d-4418-a80a-c2b5a674a33e//";
#Ifdef UUID_ARRAY; #endif;

Constant Story    "Mini-Ghosts of Blackwood Manor";
Constant Headline "^An interactive Horror by Stefan Vogt^\
                   PART1 / SIDE A: Once upon the Cross^\
                   (c) 2023 Moonmist Entertainment^\
                   and Fusion Retro Books / ZZAP!64^";
Release 8;

! game-specific defines
!Constant DEBUG; ! deactivate for release
Constant CUSTOM_ABBREVIATIONS;
Constant MAX_CARRIED = 20;
Constant NO_SCORE;
Constant OPTIONAL_FULL_DIRECTIONS;
Constant INITIAL_LOCATION_VALUE = GreatHall;

! 0 production build, 1 notification on errors, 2 full error messages
Constant RUNTIME_ERRORS = 0;

Include ">abbrvs.h"; ! load optimized abbreviations
Include "globals.h"; ! Puny library file import
Include ">minihacks.h"; ! Moonmist library file import

! 0 = snowstorm raging / game begins
! 1 = waking up after falling asleep in lounge
! 2 = consult Rosie for the man with the scar
! 3 = Rosie consulted, line becomes dead
! 4 = searched gallery and found portrait of Lord Bain
! 5 = Turned portrait and found elevation
! 6 = cut portrait and found parchment
! 7 = endless knot riddle solved
! 8 = Saints riddle in crypt solved
! 9 = Amulet investigated, research necessary
!10 = found reference of amulet and Saint 
!11 = voice advised to meet in forest
!12 = found evidence and location of the lost village
Global PROGRESS_LEVEL = 0; ! tracks the game's progress level

! declare recurring properties to optimize story file size for Z-machine v5 spec
Property cheap_scenery;      ! used by Puny's cheap scenery extension
Property cheap_scenery_pt2;  ! additional cheap scenery to work around the 32 entry limit of properties
Property player_progress;    ! common property to be used when the player makes progress with an object

! Constants for puny extensions
Constant TM_MSG_TOPICS_DEPLETED "You've run out of topics to talk about and end the conversation.";
Constant TM_MSG_EXIT "You decide to catch up later and end the conversation.";

! import Puny extensions
Include "ext_talk_menu.h";
Include "ext_cheap_scenery.h";

! will be triggered when the room is described
! [ LookRoutine;
! ];

! will be triggered when you visit a new room
! [ NewRoom;
! ];

Include "puny.h"; ! puny library file import
Include ">minimist.h"; ! Moonmist library file import

! talk_menu arrays -- STATUS [ID 300-600] TOPIC PLAYERSAYS NPCSAYS [FLAGREF|UNLOCKREF|ROUTINE]*
! customize: TM_ADD_BEFORE_AND_AFTER, TM_ADD_AFTER, TM_ADD_BEFORE. reaction line after NPC respone
Array talk_Rosie -->
30 "Preparations" "Hey Rosie, how are the preparations going?" "The manor is cleaned and the fridge is stocked with fresh vegetables and meat." 1
0 "Blackwood" "Thank you, Rosie. A merry Christmas for you and your loved ones. Since Blackwood is new to us, may I call you in case we have a question?" "Of course, Sir Thomas! I left you my number in the kitchen." RosieLeavesManor 
TM_END;

Array talk_Cora --> 
30 "Morning" "Hey! How did you sleep?" "Hi, honey! I don't think I've ever slept better. This bed is so incredibly comfortable." 1
0 "Dream" "I had a strange dream tonight. There was a building with holes in the walls where birds were nesting." "Sounds like an old dovecote. You know we have one on the manor grounds, don't you?"
TM_END;

[ RosieLeavesManor;
	talk_menu_talking = false; 
  move Rosie to Limbo;
	"^Rosie waves goodbye and leaves the manor.^^You wonder how you are going to pass the time until Cora returns, which reminds you that you wanted to check out the lounge.";
];

! limbo for objects that we don't need anymore, beware of the grues!
Object Limbo;

Object -> eerievoice "eerie voice",
  with name 'eerie' 'voice',
    article "an",
    initial "An eerie voice echoes through the garden. It seems to be calling you.",
    description "How can you describe something you can't even see?",
    before [;
      Talk, Listen:
        if (PROGRESS_LEVEL == 10) {
          PROGRESS_LEVEL = 11;
          move Cora to Limbo;
          move sleepingCora to Solar;
          move witchbook to Solar;
        }
        "Voice: Thomas, meet me in the forgotten village in the forest.";
      Take:
        "You can't be serious.";
      Examine:
        rfalse;
      default:
        "It is impossible to have such an interaction with something that hasn't manifested.";
    ],
  has animate static;

! NPCs without starting location 
Object Cora "Cora",
  with name 'Cora',
    initial "Cora has snuggled up in bed and is reading a book.",
    description "Your wife Cora is a strikingly beautiful woman with fiery red hair and emerald green eyes.",
    life [;
      ThrowAt:
        "Cora: Don't you dare!";
    ],
    before [;
        Take, Touch, Push, Pull, Turn:
          "This is not that kind of game.";
        Attack, Burn:
          "What's wrong with you? Just no.";
    ],
    talk_array talk_Cora,
  has proper animate female transparent;

Object -> witchbook "witch hunt chronology", ! when the game starts, Cora is reading this book
  with name 'witch' 'hunt' 'chronology' 'book',
    initial "The book Cora had been reading is now on the bedside table.",
    description "Chronology of the Great Scottish Witch Hunts from 1590 to 1662. The book looks quite old and very likely belongs to the manor's library. A rather sombre read.",
    before [;
      Take:
        if (self in Cora) "Cora is currently reading it, you don't want to take it away from her.";
      Push, Pull, Smell:
        if (self in Cora) "Not as long as Cora has it.";
      Search, Open:
        if (self in Cora) "Maybe when Cora is finished with it. Witch hunts are not high on your list of favourite reads anyway.";
        if (self.player_progress == false) {
          PROGRESS_LEVEL = 12;
          self.player_progress = true;
          move eerievoice to Limbo;
          "Oh. Lord Bain, the man with the scar, was responsible for wiping out an entire settlement near Blackwood Manor during the great Scottish Witch Hunt of 1597. You see that the settlement was in the nearby forest and you should be able to find it now.";
        }
        "You find no new insights.";
    ],
    player_progress false,
  has ;

Object sleepingCora "Cora",
  with name 'Cora',
    initial "Cora lies in bed and sleeps. The last few days have been very exhausting.",
    description "You could watch her sleep for hours. Oh, how you love her.",
    before [;
        Examine:
          rfalse;
        default:
          "You should let her sleep."; 
    ],
  has proper animate female;

Room GreatHall "Great Hall" ! -- locations start here
  with name 'great' 'hall' 'exits' 'exit',
      description "Flames dance in the fireplace and wood crackles as it burns slowly, giving off a pleasant warmth. Flickering light wanders across the walls, engulfing the shadows and illuminating the room in a melancholy twilight. In one corner, just below the portraits of the ancestors, stands a beautifully decorated Christmas tree. Exits lead north and west.",
      n_to Vestibule,
      w_to [;
        if (PROGRESS_LEVEL == 0) "Not now. A snowstorm rages outside.";
        return FeralGarden;
      ],
      cheap_scenery 
          8 'fireplace' 'fire' 'wood' 'flames' 'warmth' 'twilight' 'shadows' 'light' "For a second you lose yourself in the flames, immersed in the eternal struggle between darkness and light. How many generations must have warmed themselves here over the centuries?"
          24 'decorated' 'beautifully' 'christmas' 'xmas' 'corner' 'tree' 
          [;
            Examine, Search:
              print "Wow! Cora has really outdone herself this year.^";
              if (foldingspade in gallery) {
                move foldingspade to location;
                print "^You notice your folding spade. Cora probably took it with her when she bought the tree.^";
              }
              rtrue;
          ],
  has light;

Object -> gallery "portraits of the ancestors",
  with name 'portraits' 'of' 'the' 'ancestors' 'portraits' 'lords' 'ladies' 'pictures' 'paintings',
    description [;
      print "Fascinated, you look at the many portraits of the former Lords and Ladies of Blackwood. All long gone. The way of all flesh.";
      if (PROGRESS_LEVEL == 3) {
        new_line; new_line;
        if (bainportrait in self) <<Search self>>;
      }
      new_line; rtrue;
    ],
    before [;
      Search:
        if (bainportrait in self && PROGRESS_LEVEL == 3) {
          move bainportrait to location;
          PROGRESS_LEVEL = 4;
          "On closer inspection, you can see the portrait Rosie was talking about. Bain is holding a hand to his chest, and on the back of his hand you recognise the same distinctive scar you saw in your dream. How can this be?";
        }
        else rfalse;
    ],
  has scenery;

Object -> -> foldingspade "folding spade",
  with name 'folding' 'spade',
    initial "You see your folding spade behind the Christmas tree.",
    description "The iconic US Army folding spade, pretty indestructible.^^Note: You actually don't need to [fold] or [unfold] this spade. Just [dig object with spade]",
  has ;

Object -> -> bainportrait "portrait of Lord Bain",
  with name 'portrait' 'of' 'lord' 'bain' 'archibald' 'picture' 'scar' 'painting',
    initial "One of the paintings stands out. The portrait of the man with the scar on his hand, Lord Archibald Bain.",
    description "He looks like a mean fellow.",
    before [;
        Touch:
          "Your hand touches the portrait. Under your fingers you feel the brushstrokes of the painter who immortalised this moment in time many centuries ago.";
        Push:
          "You push it to the wall but that's the wrong direction if you want to closer inspect it.";
        Pull, Turn, Open, Search: 
          if (PROGRESS_LEVEL == 4 or 5) {
            give self transparent;
            PROGRESS_LEVEL = 5;
            "You turn the portrait and on the back you notice a small elevation under the canvas as if there is something hidden underneath. You cannot open the canvas with your bare hands though. You need something like a small and very sharp knife or a cutter to not destroy the picture.";
          }
          else "No need to bother with it again.";
        Cut, Attack, Unlock:
          if (self has transparent) <<Cut canvas>>;
          else "Is there any particular reason why you'd want to do that?";
    ],
  has static;

Object -> -> -> canvas "canvas",
  with name 'canvas' 'elevation',
    description "You wonder what is hidden underneath.",
    before [;
      Pull, Turn, Open, Search:
        <<Open bainportrait>>;
      Unlock, Cut, Attack:
        if (~~ boxcutter in player or GreatHall) "You don't carry a suitable object.";
        if (~~ parchment in self) "No need to cut it again, you already found what was hidden inside the portrait.";
        PROGRESS_LEVEL = 6;
        move parchment to GreatHall;
        "You carefully cut the canvas next to the elevation without destroying the picture. A parchment falls from the portrait.";
    ]
  has scenery;

Object -> -> -> -> parchment "parchment",
  with name 'parchment' 'writing',
    initial "A parchment has fallen from the portrait and is now lying on the floor.",
    description "The writing is ornate and looks old-fashioned. There is a kind of riddle on the parchment: Behind the endless knot I was laid to rest. Four, four, two, three, find me and you will see.",
  has ;

Room TheChapel "The Chapel"
  with name 'chapel' 'religious' 'symbols' 'sacred' 'place' 'gilded' 'surface' 'dulled' 'floor',
        description "The occasional creak of old wood can be heard. An ancient altar is the centrepiece of the chapel, drawing your eyes to it with its grandeur and attention to detail. One wonders how many prayers and moments of reflection the chapel has witnessed over the centuries. Doors lead the southwest and to the north.",
        n_to Vestibule,
        sw_to Oratory,
        d_to [;
          if (opening in self) {
            print "Slowly you descend until you are completely engulfed in darkness.^";
            return Crypt;
          }
          "You cannot go that way.";
        ],
        cheap_scenery
            2 'door' 'doors'
            [;
              Examine:
                "Man, they knew how to build doors back in the day.";
              Enter, Open, Go:
                "Just go into the desired direction to reach one of the locations behind the doors.";
            ],
   has light ;

Object -> altar "altar",
  with name 'large' 'ancient' 'altar',
    description "As you get closer, you notice that the altar is decorated with elaborate carvings of biblical scenes and symbols. There is a depiction of the last supper. On the back of the altar you notice a bronze panel.",
    before [;
        Receive:
          if (receive_action == ##PutOn) "There's no need to put something on the altar at the moment.";
          if (receive_action ~= ##Insert) rfalse;
          <<Insert noun panel>>;
        Climb, Enter:
          "Hell no, you're too old for that.";
        Push, Pull:
          "No matter how hard you try, it won't move.";
    ],
  has scenery supporter transparent;

Object -> -> panel "bronze panel",
  with name 'bronze' 'panel' 'spot' 'indentation' 'silhouette' 'humanoid',
    description [;
        print "The panel depicts the chaotic events of the end of the world. The Four Horsemen ride through the sky, their steeds galloping at breakneck speed. ";
        if (statuette in self) "The panel is now complete. The bronze statuette of the Archangel Gabriel blowing his trumpet to announce the Day of Judgement fitted perfectly into the indentation.";
        "There is a spot with an indentation in the panel where something seems to be missing. The indentation has the shape of a humanoid silhouette.";
    ],
    before [;
        Receive:
          if (~~ receive_action == ##Insert) rfalse;
          if (~~ noun == statuette) "That's definitely the wrong object. You are looking for something that fits the spot in the bronze panel.";
          move statuette to self;
          move opening to TheChapel;
          give self transparent;
          "You put the statuette in the bronze panel and it fits perfectly. The next moment, a hidden mechanism activates and the altar slides backwards, revealing an opening below that leads into the blackest darkness.";
        Push, Pull:
          <<Push altar>>;
        Touch:
          "It feels like cold metal. Other than that, there is nothing special about it.";
    ],
  has scenery;

Object -> -> -> opening "opening",
  with name 'opening',
    article "an",
    initial "An opening that was hidden below the altar leads down to a very dark place.",
    description "Fascinated you stare at the opening and remember a quote from Edgar Allan Poe: ~Deep into that darkness peering, long I stood there, wondering, fearing, doubting, dreaming dreams no mortal ever dared to dream before.~",
    before [;
        Enter:
          <<Go FAKE_D_OBJ>>;
    ],
  has static;

Room Oratory "Oratory"
  with name 'oratory' 'room' 'exit',
        description "Vibrant colours stream in through the panes and cast colourful shadows across the room. An exit lies to the north.",
        n_to TheChapel,
        before [;
          PutOn:
            if (noun == goldenkey && second == hands) {
              if (goldenkey in hands) rfalse;
              <<Insert goldenkey hands>>;
            }
        ],
        cheap_scenery
             6 'colours' 'colour' 'vibrant' 'panes' 'colourful' 'shadows' "A breathtaking spectacle of colour unfolds. Vibrant hues dance and mingle, painting the air with a kaleidoscope of brilliance."
             ,
  has light ;

Object -> "statue of a saint",
  with name 'alcove' 'statue' 'saint' 'St' 'St.' 'Margaret' 'plaque',
    describe [;
      print "^An alcove to the left catches the eye with a beautifully carved statue of a saint, depicted with a serene expression, her hands directed hopefully towards the heavens";
      if (parent(goldenkey) == hands) print ", holding a golden key";
      print ".";
      new_line; rtrue;
    ],
    description "A small plaque beside the statue reads ~Saint Margaret of Scotland.~",
  has static transparent;

Object -> hands "hands of Saint Margaret",
  with name 'hands' 'hand' 'palm' 'palms',
    description [;
      print "The way the hands are held suggests that you can place something into them";
      if (parent(goldenkey) == hands) print " and the shape of the golden key fitted perfectly into the palms of the hands";
      print ".";
      new_line; rtrue;
    ],
    before [;
        Receive:
          if (~~ noun == goldenkey) "This object doesn't fit into the hands. Because of the way Saint Margaret's hands are aligned, only the object that was made for this purpose can be perfectly placed in them, whatever it is.";
    ],
    after [;
        Receive:
          if (~~ self.player_progress == true) {
            self.player_progress = true;
            move cuthbert to Oratory;
            "The key fits perfectly. A stone in the wall slides aside and reveals a plate. Under normal circumstances, you would never have found it. Someone has spoken to you through your dreams, deliberately leading you to secrets that have been hidden here for so long. But why? There must be a reason for all of this.";
          }
          else rfalse;
    ],
    player_progress false,
  has scenery pluralname open container;

Constant WANDEROFF "You shouldn't wander off while Rosie is here waiting for you.";

Room Vestibule "Vestibule"
  with name 'vestibule' 'room',
        description "The room is dimly lit by bulbs in sconces, casting long shadows across the cold floor. To the west, you can see an enormous wooden door leading to the outside. The library lies to the north, the great hall to the south and the kitchen to the east. To the southwest, you notice an old hinged door. A stone staircase spirals upwards.",
        n_to [;
          if (Rosie in Vestibule) print_ret (string)WANDEROFF;
          return Library;
        ],
        s_to [;
          if (Rosie in Vestibule) print_ret (string)WANDEROFF;
          return GreatHall;
        ],
        e_to [;
          if (Rosie in Vestibule) print_ret (string)WANDEROFF;
          return Kitchen;
        ],
        w_to [;
          if (Rosie in Vestibule) print_ret (string)WANDEROFF; 
          if (PROGRESS_LEVEL == 0) "A snowstorm is raging outside. You decide that it's not a good time to leave the manor now.";
          "You can't get out here. The forecourt is probably completely snowed in and the snow is preventing the door from opening.";
        ],
        sw_to [;
          if (Rosie in Vestibule) print_ret (string)WANDEROFF;
          return TheChapel;
        ],
        u_to [;
          if (Rosie in Vestibule) print_ret (string)WANDEROFF;
          return Corridor;
        ],
        cheap_scenery
            4 'light' 'bulbs' 'sconces' "It looks like spots in the walls were once meant for torches. That was a long time ago. Even the light bulbs seem antiquated by now."
            11 'long' 'shadows' "Hello darkness, my old friend."
            24 'enormous' 'wooden' 'door'
            [;
              Examine:  
                "The door looms before you, exuding an aura of age and history."; 
              Open, Enter:
                <<Go FAKE_W_OBJ>>;
            ]
            2 'stone' 'staircase'
            [;
              Examine:
                "It leads to the upper part of the manor.";
              Enter, Go:
                <<Go FAKE_U_OBJ>>;
            ]
            21 'olden' 'hinged' 'door' 
            [;
              Examine:
                "The manor's chapel lies behind it.";
              Open, Enter:
                <<Go FAKE_SW_OBJ>>;
            ],
  has light ;

Object -> Rosie "Rosie",
  with name 'Rosie' 'housekeeper',
    initial "Rosie is here. It seems as if she has been waiting for you.",
    description "Rosie has been Blackwood's housekeeper for many years. She already served the former owner of the manor. Despite her age, her eyes are sharp and she seems to notice every detail. Her hair is pulled back in a tight bun and she always has a smile on her face.",
    before [;
      Touch, Attack, Burn: 
        "That wouldn't be very gentlemanly.";
    ],
    talk_array talk_Rosie,
  has proper animate female;

Room Kitchen "Kitchen"
  with name 'kitchen' 'vast' 'space' 'room',
        description "The fireplace, once the main source of heat and cooking, has been replaced by a modern cooker, but the original mantelpiece and hearth remain as a reminder of the roaring fire that once burned here. Rough-hewn stone worktops add to the old-world charm of the kitchen, while electric lights brighten the room. There are exits to the north and west.",
        n_to Storeroom,
        w_to Vestibule,
        cheap_scenery
            3 'fireplace' 'mantelpiece' 'hearth' "You love the fact that this has been preserved. The magic of days gone by enchants you."
            11 'modern' 'cooker' "The comforts of the modern age. For the people of the medieval times, a cooker like this would have been witchcraft."
            32 'electric' 'warm' 'white' 'lights' 'light' "The warm white light bathes the kitchen, creating an inviting ambiance.",
  has light ;

Object -> worktops "worktops",
  with name 'rough' 'rough-hewn' 'stone' 'worktops' 'worktop',
    description [;
      print "One can only admire this craftsmanship. You wonder how old these worktops are, probably many centuries.";
      if (note in self) {
        new_line;
        <<Search self>>;
      }
      new_line; rtrue;
    ],
    before [;
      Touch:
        "You feel cold stone.";
      Push, Pull, Turn:
        "No chance to move them, which is no surprise. They must weigh a ton.";
      Search:
        if (note in self) {
          move note to location;
          "^Rosie seems to have left a note for you on one of the worktops.";
        }  
        else rfalse;
    ],
  has pluralname scenery;

Object -> -> note "note",
  with name 'note' 'number',
    initial "A note is lying on one of the worktops.",
    description "That's Rosie's phone number.",
  has ;

Room Storeroom "Storeroom"
  with name 'storeroom',
        description "In front of you is a large chest of drawers with a mirror on top. The drawers are closed, but you can see that they're labelled with various items such as ~linen~, ~candles~ and ~cutlery~. On the floor you can spot a dusty typewriter. Above is a row of coat hangers with some old jackets and hats. You can leave by heading south.",
        s_to Kitchen,
        cheap_scenery
          11 'dusty' 'typewriter' "As an author, you can only say: thank God these things are being replaced more and more by computers but some writers still use them. Wake up! It's 1986."
          1 'mirror' "The mirror surface has become dull through the many years down here. So you no longer recognise your own reflection but only a blurred shadow."
          11 'blurred' 'shadow' "Is that really you? Spooky."
          2 'hat' 'hats' "No money in the world could convince you to wear one of these. You really need to clean out here next spring.",
  has light ;

Object -> oldjackets "old jackets",
  with name 'old' 'jackets' 'jacket' 'coat' 'hangers' 'row' 'of',
    description "The old jackets are quite moth-eaten and definitely no longer suitable for wearing.",
    before [;
        Take, Wear:
          "Um, no. What's wrong with you?";
        Smell:
          "Wow, they smell pretty musty and there is also a different scent coming from it. Disgusting. Did a rat die in it?";
        Touch:
          "Wonderful. Apparently they are also sticky.";
        Search:
          if (~~ electrictorch in self) "No need to search it again. It stinks.";
          move electrictorch to Storeroom;
          "Oh, there's an electric torch in one of the pockets that might come in handy.";
    ],
  has pluralname scenery;

Object -> -> electrictorch "electric torch",
  with name 'electric' 'torch' 'flashlight' 'Ever Ready',
    describe [;
      if (self hasnt moved) {
        print "^You notice an electric torch ";
        if (self has on) print "(providing light) ";
        "sticking out of the pocket of an old jacket.";
      }
    ],
    article "an",
    description [;
        print "It's an Ever Ready electric torch, probably from the 1970s, ";
        if (self hasnt on) "currently off.";
        "shining brighter than the Morning Star.";
    ],
    before [;
        Drop:
          if (location == thedark) "It's not a good idea to drop your only source of light in the dark.";
        SwitchOff:
          if (self in Crypt) "It won't be a good idea to switch off your only source of light here while not carrying it. You won't be able to find it again and this area would become inaccessible.";
    ],
    after [;
        SwitchOn: 
          give self light;
        SwitchOff: 
          give self ~light;
    ],
has switchable ;

Object -> drawers "drawers",
  with name 'linen' 'candles' 'cutlery' 'drawers' 'drawer' 'chest',
    description "Properly labelled. Commendable.",
    before [;
        Open, Search:
          if (PROGRESS_LEVEL == 5 && boxcutter in self) {
            move boxcutter to location;
            "Your search reveals a box cutter, which you place on the ground.";
          }
          "You look inside the drawers and find absolutely nothing that could be of any use to you right now.";
    ],
  has pluralname scenery;

Object -> -> boxcutter "box cutter",
  with name 'box' 'cutter' 'Stanley',
    initial "A box cutter lies on the ground.",
    description "That's an old Stanley box cutter. They were built to last forever unlike the cheap plastic you get these days.",
  has ;

Room Library "Library"
  with name 'library' 'ceiling' 'shapes' 'sizes' 'polished' 'wood',
        description "The walls are lined with bookshelves that reach to the ceiling, filled with books of all shapes and sizes. The air is thick with the scent of leather and old paper. A large wooden table is covered with old manuscripts and parchments. The vestibule lies southwards.",
        s_to Vestibule,
        before [;
          Smell:
            if (noun == nothing) "That smell immediately transports you to another time and place.";
        ],
        cheap_scenery
          35 'large' 'wooden' 'old' 'table' 'manuscripts' 'parchments' 'recipes' 'recipe' "On closer inspection, the old manuscripts and parchments on the table are quite unspectacular. Just old recipes for ointments and herbal teas."
          1 'air' [;
            Smell:
              <<Smell>>;
          ],
  has light ;

Object -> books "books",
  with name 'books' 'bookshelves' 'shelves' 'book' 'bindings',
    description "You notice that many of these works, due to their age, are written in Latin. Fortunately, Latin, which was the language of the Church in early Britain, was taught to you at school.",
    before [;
        Push, Pull:
          "Your action had no effect. Did you expect a secret passage to open? Sorry, not this time unfortunately.";
        Smell:
          "Old paper and leather, you would actually love a perfume that smells like that.";
        Touch:
          "History at your fingertips, you're in awe.";
        Burn:
          "Certainly not. What the hell is wrong with you?";
        Search:
          if (PROGRESS_LEVEL == 11) "You look for clues about a village in the forest but unfortunately find nothing at all, very disappointing.";
          if (PROGRESS_LEVEL ~= 9) "At the moment, you don't really know what you want to look up, and now is not the time for casual reading. You may need to come back later when you have a clearer idea of what you are searching for.";
          PROGRESS_LEVEL = 10;
          move eerievoice to FeralGarden;
          amulet.player_progress = true;
          "You find a clue that tells you more about the amulet. In a book about the saints of Scotland and Northumbria, you discover a drawing of Saint Cuthbert, probably the most famous saint of early Britain, wearing the amulet. Legend has it that it came from Golgotha. At the very moment Jesus Christ died, lightning struck the earth and created what you suspected to be trinitite. It reflects a moment when a bridge was built between the world of the living and the world of the dead.^^The amulet is said to have enabled its bearer to communicate with those who passed on to the other side.^^Then, you hear a distant voice calling you. The voice seems to be coming from the garden.";
    ],
  has pluralname scenery;

Outside FeralGarden "Feral Garden"
  with name 'feral' 'garden' 'manor',
        description "You're in the feral garden. To the west is an old dovecote, its structure weathered but still standing. A trail northwards leads into the forest, disappearing into the shadows of the trees. The manor is to the east.",
        before [;
          Listen:
            if (eerievoice in self) <<Talk eerievoice>>;
        ],
        n_to [;
          if (PROGRESS_LEVEL < 11) "You shouldn't wander off. You wouldn't know where to go anyway.";
          if (PROGRESS_LEVEL == 11) "You don't know where this village is that the voice is talking about. To your knowledge, no one lives in this forest. In fact, the only places on the lands of Blackwood which are inhabitated are the manor itself and the old servants' house where Rosie lives with her husband.";
          if (winterjacket hasnt worn) "It is far too cold to go into the forest without a winter jacket. You should find something warm to wear.";
          if (~~ electrictorch in player) "You probably should take your torch with you in case it gets dark.";
          if (~~ amulet in player) "The voice said you need the amulet, so you better take it with you.";
          EndingSequence(); rtrue;
        ],
        w_to Dovecote,
        e_to GreatHall,
        player_progress false,
        cheap_scenery
          12 'old' 'dovecote' 'structure' "The dovecote, once an important part of the manor, is now nothing more than a relic from the dark past. You may take a closer look by going west."
          2 'trail' 'shadows' "The trail beckons, promising long forgotten mysteries hiding in the shadows of the forest."
          3 'forest' 'tree' 'trees' "Countless stories surround this forest. Sad fates are said to have been sealed here. In every legend there is a grain of truth. So you look respectfully at the trees, silent witnesses and keepers of lost knowledge."
  has light ;

Room Dovecote "Dovecote"
  with name 'dovecote' 'shed' 'inside',
        description "The dovecote has been repurposed as a garden shed. The inside is cluttered with garden tools, bags of soil and pots of various sizes. You can see that the nesting holes have been blocked off, but the faint scent of bird droppings still lingers in the air. A door to the east leads back to the garden.",
        e_to FeralGarden,
        before [;
          Smell:
            if (noun == nothing) "Ugh.";
        ],
        cheap_scenery
          11 'garden' 'tools' "A million garden tools but neither a shovel nor a spade. This is hilarious."
          4 'of' 'bags' 'soil' 'pots' "This stuff will come in handy next spring."
          11 'nesting' 'holes' "That's how times change. Birds are apparently no longer wanted here."
          1 'door' 
          [;
            Examine: 
              "Another old, wooden door. You should consider writing a book about doors.";
            Open, Enter:
              <<Go FAKE_E_OBJ>>;
          ],
  has light ;

Object -> spot "spot",
  with name 'spot',
    initial "You have no idea how this can be but you recognise the dovecote from your dream, even though it looked different. You notice the spot where something has been buried.",
    description "If something was buried here, it was probably a long time ago. The spot looks absolutely unsuspicious.",
    before [;
      Dig:
        if (second == foldingspade) {
          move leatherbag to Dovecote;
          move self to Limbo;
          "You dig at the spot with the folding spade and after a little while you find a leather pouch.";
        }
      DigWithHand:
        "The ground is too hard to dig with your hands.";
    ],
  has static;

Object -> -> leatherbag "leather pouch",
  with name 'old' 'leather' 'pouch',
    describe [;
      if (self hasnt moved) "^A leather pouch lies on the ground.";
    ],
    description "The leather pouch looks very old, almost medieval. The many years in the ground have not done it any harm.",
    before [;
      Receive:
        if (~~ noun == goldenkey) "That object doesn't fit into the leather pouch.";
      Open:
        if (leatherbag.player_progress == true) rfalse;
        self.player_progress = true;
        PROGRESS_LEVEL = 2; ! ready to consult someone about the man with the scar
        give self open;
        "You open the leather pouch, revealing a mysterious golden key. A thought occurs to you. Something was indeed buried in the dovecote. That means the man with the scar must be real. You should consult someone who knows more about the manor.";
    ],
    player_progress false,
    capacity 1,
  has container openable ;

Object -> -> -> goldenkey "golden key",
  with name 'golden' 'key' 'Christian' 'symbolism',
    description "A golden key, richly decorated with Christian symbolism. Definitely medieval. There is an inscription on it: ~The holy Pearl of Scotland holds the key.~",
  has ;

Room Crypt "Crypt"
  with name 'crypt' 'room' 'perimeter',
        description "You can barely make out the outlines of several stone coffins, neatly arranged in rows around the perimeter of the room, strikingly not decorated or inscribed. One coffin has been opened, revealing the remains of an ancient shroud and the faint outline of bones. Steps lead up. On one side of the crypt is a mural.",
        u_to [;
          if (electrictorch in player && electrictorch has on) {
            give electrictorch ~on;
            give electrictorch ~light;
            print "You turn off your electric torch to conserve battery power.";
            new_line;
          }
          return TheChapel;
        ],
        cheap_scenery
          1 'steps' "These lead back to the chapel." 
          11 'secret' 'compartment' 
          [;
            Examine, Search, Touch, Smell:
              if (PROGRESS_LEVEL < 8) {
                print_ret (string)MSG_PARSER_NOSUCHTHING;
              }
              else rfalse;
          ]
          11 'ancient' 'shroud' "The shroud is in great shape considering its age."
          1 'crosier' "Very simply worked, not as pompous as what you see in the hand of a bishop today."
          11 'large' 'door'
          [;
            Examine:
              "Another massive door you should catalog for your upcoming bestseller ~The Doors of Blackwood Manor~.";
            Enter, Open:
              <<Go FAKE_S_OBJ>>;
          ]
          ,
  has ~light ;

Object -> coffin "stone coffin",
  with name 'coffin' 'coffins' 'remains' 'bones' 'deceased' 'stone' 'faint' 'outline' 'body' 'of',
    description "A man of God seems to have been buried here, as evidenced by the crosier protruding from the shroud. The peace of the deceased has undeniably been disturbed. Someone was looking for something. But what could be the reason for such an act?",
    before [;
        Search:
          "If there was something to be found here, it probably has been found a long time ago. So you're not very surprised that your search reveals nothing of interest.";
        Touch:
          "The stone feels smooth and cold. The body you won't touch. No way.";
        Climb, Enter:
          "Are you planning to take a nap next to the body?";
    ],
  has scenery;

Object -> -> amulet "opaque amulet",
  with name 'opaque' 'amulet' 'green' 'greenish' 'shimmer' 'glass' 'molten' 'trinitite' 'leather' 'cord',
    article "an",
    initial "Inside of a secret compartment, you can see an opaque amulet. Something about it fills you with awe, even though you don't know why.",
    description [;
      if (self.player_progress == false) {
        print "Something about it fills you with awe, though you can't quite put your finger on it. Tied to an old leather cord, you recognise what at first glance could be molten glass. It has a greenish shimmer and is opaque. You should try to find out more about the amulet. Perhaps there are records of it here in Blackwood? That would be obvious.^";
        PROGRESS_LEVEL = 9;
      }
      else print "The chronicles say that the amulet belonged to none other than Saint Cuthbert of Lindisfarne. It is made of trinitite, which was created by a bolt of lightning on Golgotha at the very moment Jesus Christ died. According to the legend, Cuthbert used the amulet to communicate with the dead saints and martyrs of ancient Britain. Who knows what other secret powers it has.^";
    ],
    before [;
      Touch:
        "As soon as you touch it, you feel flooded with emotion. This is no ordinary amulet.";
      Wear:
        "You actually know nothing about it. You rather don't want to wear it at this point.";
    ],
    player_progress false,
  has ;

Object -> -> cuthbert "Saint Cuthbert plate",
  with name 'saint' 'St' 'St.' 'plate' 'cuthbert' 'crowned' 'head' 'otters',
    description "A bishop with a halo has been engraved into the plate. He is holding a crowned head in his hands and is accompanied by otters. A beautiful and detailed work. It says ~Saint Cuthbert~."; ! Lindisfarne

Object -> lindisfarne "monastery mural", ! St. Cuthbert, Lindisfarne Monastery
  with name 'lindisfarne' 'monastery' 'painting' 'picture' 'mural' 'square' 'recess',
    description [;
      print "A monastery has been painted on the wall. You admire a weathered stone sanctuary with narrow windows peeking from high walls. The mural says: ~Lindisfarne Monastery~.";
      print "^^There is a square recess in the mural, containing ";
      if (~~ child(self) == nothing) PrintContents(0, self);
      else print "nothing";
      ".";
    ],
    before [;
      Receive:
        if (~~ noun == cuthbert) "That doesn't fit.";
        if (PROGRESS_LEVEL > 7) "No need to.";
        move amulet to crypt;
        move cuthbert to lindisfarne;
        PROGRESS_LEVEL = 8;
        "^A click can be heard behind you. On the outside of the ransacked coffin a secret compartment has opened. Inside you notice an amulet.";
    ],
  has scenery container open;

Room Corridor "The Gallery"
  with name 'gallery',
        description "A multitude of beautiful oil paintings graces the walls, a glimpse of forgotten times. You can feel the soft, plush fibres of the carpet runner under your feet. To the north, an old wooden door leads to the lounge. To the south, you get to the Solar. The bathroom is to the northwest. A spiral stone staircase leads down.",
        n_to Lounge,
        s_to Solar,
        nw_to Bathroom,
        d_to Vestibule,
        cheap_scenery
          21 'old' 'wooden' 'door'
          [;
            Examine:
              "These old doors here in Blackwood are masterpieces of craftsmanship.";
            Open, Enter:
              <<Go FAKE_N_OBJ>>;
          ]
          CS_ADD_LIST Corridor (cheap_scenery_pt2)
        ,
        cheap_scenery_pt2
          33 'patterned' 'soft' 'plush' 'carpet' 'runner' 'fibres' "It is such a pleasure to walk on it. So soft and comforting." 
          4 'solar' 'bathroom' 'vestibule' 'lounge'
          [;
            Examine, Enter:
              "You may reach this location by going into the suggested direction.";
          ]
          3 'spiral' 'stone' 'staircase' "It leads down to the lower part of the manor."
        ,
  has light ;

Object -> paintings "oil paintings",
  with name 'beautiful' 'oil' 'paintings',
    description "The depictions of Scottish saints catch your eye.",
    before [;
      Turn, Search, Push, Pull:
        print_ret (string)GALLERYSEARCH;
    ], 
  has scenery;

Object -> depictions "depictions of Scottish saints",
  with name 'depictions' 'of' 'scottish' 'saints' 'plaques' 'Molaise' 'Leighlin' 'Wendelin' 'Trier' 'Cuthbert' 'Lindisfarne' 'Conran' 'Orkney' 'Kessog' 'Inchtavannach' 'Donnan' 'Eigg' 'Adomnan' 'Iona' 'Inan' 'Irvine' 'Ernan' 'Himba' 'Nathalan' 'Tullich' 'Fillan' 'Pittenweem',
    description "You notice plaques below. Without these, you wouldn't know who any of these saints on the paintings are. There are depictions of Molaise of Leighlin, Wendelin of Trier, Cuthbert of Lindisfarne, Conran of Orkney, Kessog of Inchtavannach, Donnan of Eigg, Adomnan of Iona, Inan of Irvine, Ernan of Himba, Nathalan of Tullich and Fillan of Pittenweem.",
    before [;
      Turn, Search, Push, Pull:
        print_ret (string)GALLERYSEARCH;
    ], 
  has scenery; 

Constant GALLERYSEARCH "You look behind a few paintings but find nothing of interest.";

Room Solar "The Solar"
  with name 'solar' 'grand' 'chamber' 'corner' 'door',
        description "In one corner of the grand chamber is a large four-poster bed with heavy velvet curtains drawn around it. A rotary telephone sits on a small table beside the bed and along one wall is a row of old-fashioned wardrobes adorned with floral motifs. A window lets you look far across the manor lands. A doors leads north.",
        n_to Corridor,
        cheap_scenery
          12 'manor' 'lands' 'window' "Rolling hills and forests now blanketed in a thick layer of snow stretch out before you, dotted with clumps of trees and winding streams."
          38 'thick' 'winding' 'rolling' 'layer' 'snow' 'hills' 'forest' 'forests' 'streams' 'clumps' 'trees' "The view takes your breath away."
          1 'rosie'
          [;
            Call:
              <<Take telephone>>;
            default:
              "Rosie is not here.";
          ]
          CS_ADD_LIST Solar (cheap_scenery_pt2),
        cheap_scenery_pt2
          21 'heavy' 'velvet' 'curtains' "These curtains are so classy. You really feel like a nobleman when you wake up and the morning sun shines gently through."
          11 'bedside' 'table' "It's a nice, old piece but it's just a table, nothing special about it."
          21 'large' 'four-poster' 'bed' "This is by far the most comfortable bed you've ever slept in."
        ,
  has light ;

Object -> wardrobe "wardrobe",
  with name 'old-fashioned' 'wardrobes' 'doors' 'wardrobe',
    description "The wardrobes most likely date from the early 18th century. You admire the outstanding craftsmanship in awe.",
    before [;
      Search, Open:
        if (winterjacket in self) {
          move winterjacket to location;
          "You find your winter jacket and hang it on the wardrobe.";
        }
        else "You take another look but don't find anything of interest.";
    ],
  has scenery;

Object -> -> winterjacket "winter jacket",
  with name 'winter' 'jacket' 'purple' 'triple' 'fat' 'goose',
    initial "Your winter jacket is hanging on one of the wardrobes.",
    description "It's a purple Triple Fat Goose jacket, which you bought in New York last year. Cheeky 80s fashion.",
  has clothing ;

Object -> telephone "rotary telephone",
  with name 'rotary' 'bakelite' 'telephone' 'phone',
        description [;
          "This is a very old British bakelite telephone, probably from the 1940s. You wouldn't expect anything less in Blackwood. It seems that every piece in the manor has a story to tell.^^Use it with [call person].";
        ],
    before [;
        Take:
          if (PROGRESS_LEVEL < 2) "There's currently no need to call Rosie.";
          if (PROGRESS_LEVEL == 2) {
              if (~~ note in player or Solar) "You don't have Rosie's phone number.";
              PROGRESS_LEVEL = 3;
              print "You call Rosie. It seems as if the dial tone rings for an eternity but then she picks up the phone.^^You: Hey Rosie! I'm sorry to bother you. Can you think of anything in relation to Blackwood about a man with a scar on his hand?^^Rosie: Oh. I think you should have a look at the portraits of the ancestors. ^^You: Thank you Rosie, I'll have a look.^^You end the conversation.";
              new_line; rtrue;
          }
          else "The line is dead. Strange.";
    ],
  has scenery;

Object Bathroom "Bathroom"
  with name 'bathroom' 'vaulted' 'ceiling' 'corner' 'centre' 'room' 'of',
        description "In the centre of the room is a luxurious claw-foot bathtub. In the corner is a sleek, modern toilet with a streamlined design. A stunning Celtic knot is carved into a stone that's embedded in the wall above the bathtub. The gallery lies to the south.",
        s_to Corridor,
        cheap_scenery
          11 'dusty' 'niche' 
          [;
            Examine, Touch, Smell:
              if (statuette in garnets) {
                print (string)MSG_PARSER_NOSUCHTHING;
              }
              else "Ugh!";
          ]
          14 'luxurious' 'claw-foot' 'bath' 'bathtub' 'tub' "Cora loves this bathtub. Hot water, ethereal bath additives, a good tea, she literally celebrates it."
          21 'sleek' 'modern' 'toilet'
          [;
            Examine:
              "This particular toilet makes every session a pleasure.";
            Enter:
              "You don't feel like relieving yourself right now.";
          ]  
        ,
  has light ;

Object -> knot "celtic knot",
  with name 'celtic' 'knot' 'endless' 'stone',
    description "With amazement you admire the work of art perpetuated in the stone. It is certainly a lot older than the rest of the bathroom. Celtic knots, in Scottish Gaelic ~snaidhm Ceilteach~, are loops that have no beginning or end, symbolising infinity. Under the knot there are four garnets set into the stone.",
    before [;
        Push, Pull:
          "The knot itself doesn't move at all.";
    ],
  has scenery transparent;

Object -> -> garnets "garnets",
  with name 'gems' 'gemstones' 'garnet' 'garnets',
    description "The use of garnets as gemstones has been common since the Bronze Age. Garnets and other heavy minerals occur in many of the sedimentary beds of the North of England and Scotland. So it is not surprising to find them here alongside this wonderful Celtic knot.",
    before [;
        Pull:
          "You cannot pull the garnets. And you probably shouldn't anyway.";
        Touch:
          "You gently touch the garnets and feel the fine cut. They are incredibly beautiful.";
        Push:
          if (PROGRESS_LEVEL > 7) "You needn't worry about this anymore. You've already got what you came for.";
          if (~~ PROGRESS_LEVEL == 6) "It seems you can actually push in the garnets but no matter what you try, they always return to their original position.";
          print "You need to be more precise on this one ";
          print "[push garnets in order 1234]";
          ".";
        PushInOrder:
          if (PROGRESS_LEVEL == 7) <<Push garnets>>;
          if (~~ PROGRESS_LEVEL == 6) <<Push garnets>>;
          if (second == 4423) {
            PROGRESS_LEVEL = 7;
            move statuette to location;
            "You can hear the sound of an ancient mechanism being activated behind the wall. Part of the Celtic knot opens to reveal a bronze statuette lying in a dusty niche behind it.";
          }
          "That didn't work. A wrong combination maybe?";
    ],
  has pluralname scenery;

Object -> -> -> statuette "bronze statuette",
  with name 'bronze' 'statuette' 'angel' 'archangel' 'gabriel' 'horn',
    initial "In a dusty niche inside the knot you see a bronze statuette.",
    description "You admire an angel blowing a horn. Could it be the Archangel Gabriel announcing Judgement day? Anyway, the statuette looks like it is part of something. The challenge will be finding that something.",
    before [;
      Take:
        if (self in panel) "You've put it where it belongs, so you don't need to pick it up again.";
        if (self.player_progress == false) {
          self.player_progress = true;
          move self to player;
		      update_moved = true;
          "As soon as you move the bronze statuette, the mechanism activates and hides the niche behind the knot again. But you were quick enough to pull out the statuette which is now in your possession.";
        }
        rfalse;
    ],
    player_progress false,
  has ;

Room Lounge "Lounge"
  with name 'lounge' 'leaded' 'window' 'opposite' 'side' 'room' 'exit',
        description "The decor of the lounge is traditional. Several vinyl records are scattered around the stereo system. On the opposite side of the room, you see a large TV with a VHS system and video tapes stacked neatly nearby. A grandfather clock breaks the silence with its ticks. An exit to the south leads back to the gallery.",
        s_to Corridor,
        cheap_scenery
          6 'tapes' 'movies' 'films' 'VHS' 'tape' 'video'
          [;
            Examine:
              "So many great films in one place. It won't get boring here if the manor is snowed in over the holidays.";
            Touch:
              "You feel plastic. Was it what you expected to find?";
            SwitchOn, Take:
              print "(in order to watch a film)^";
              <<SwitchOn vhssystem>>;
          ]
          6 'vinyl' 'record' 'records' 'covers' 'music' 'album'
          [;
            Listen:
              <<SwitchOn stereosystem>>;
            Examine: 
              "It seems that Cora found some of your albums in one of the moving boxes and brought them here for you. You can see Joy Division, New Model Army, Tears for Fears, Depeche Mode, Skeletal Family, The Cure and Killing Joke among others. Look at all those wonderful covers.";
            Smell:
              "Nothing beats the smell of vinyl records, the scent of your generation.";
            Touch: 
              "Feels like vinyl.";
            SwitchOn, Take, Open:
              print "(in order to listen to music)^";
              <<SwitchOn stereosystem>>;
            ]
            1 'decor' "Just like in a time-honoured gentlemen's club."
            CS_ADD_LIST Lounge (cheap_scenery_pt2),
          cheap_scenery_pt2
            11 'grandfather' 'clock' "The clock is probably from the 19th century. It ticks away like a metronome, in its indispensable tock washing away the present, devouring moments while one loses the sense of time."
            'tv' 'television' 
            [;
              Examine:
                "It's huge. Movies come to life on this one.";
              SwitchOn:
                print "(in order to watch a film)^";
                <<SwitchOn vhssystem>>;
            ]
            ,
        player_progress false,    
  has light ;

Object -> vhssystem "VHS system",
  with name 'VHS' 'system' 'recorder' 'Ferguson' 'video',
        description "It's a Ferguson VHS video recorder, probably from 1982. Ferguson products are made in Britain and back when this recorder came out it roughly cost a monthly wage. The build quality is exceptional.",
    before [;
      SwitchOn:
          "You're currently not in the mood to watch a film.";
    ],
    player_progress false,
  has scenery;

Object -> stereosystem "stereo system",
  with name 'stereo' 'system' 'turntable' 'player' 'Pioneer' 'casing' 'metal',
    description "It's a state-of-the-art Pioneer system. Something you didn't expect to find here in Blackwood.",
    before [;
        Touch:
          "Your hand glides over the metal casing in awe.";
        Push, Pull:
          "What a glorious idea. Better not. You don't want to break it.";
        SwitchOn:
          if (Rosie in vestibule) "Before you're going to relax here, you should talk to Rosie first. She's probably still waiting in the vestibule for you.";
          if (self.player_progress == false) {
            print "You decide to play ~No Rest for the Wicked~ by New Model Army, one of your favourite records. You sit down in one of the armchairs and close your eyes. The ethereal guitars with heavy chorus effects gently lull you to sleep.^^You see the world with different eyes now. You walk purposefully towards a tower-like building, driven by one of the strongest emotions, fear.^^Inside, you gaze up and see numerous birds lurking in holes in the walls. Then you look down and notice strange hands burying something. On the back of the hand, which is definitely not yours, you recognise a large and very distinctive scar.^^Before you can make out any more details, you wake up. You feel the warm morning sun shining in your face through the leaded window. Obviously your wife covered you with a warm blanket.^^What a strange dream it was. You have to catch up with Cora. She's probably still asleep in the solar, or already making breakfast.";
            new_line;
            PROGRESS_LEVEL = 1; ! progress bump, environment to waking up after the dream
            move Cora to Solar;
            self.player_progress = true;
            rtrue;
          }
          if (self.player_progress == true )"You don't feel like listening to music now.";
    ],
    player_progress false,
  has scenery;

[EndingSequence;
  print "^You have completed Mini-Ghosts PART1. Reset your C64 and load SIDE B to continue.";
  deadflag = 2; ! you have won!
];

[ Initialise; ! init vars and start the game

  notify_mode = false; ! deactivate score notifications if set false
  lookmode = 2; ! activate verbose look modethedark

  thedark.description = TheDarkAdvanced;
  thedark.short_name = "In the dark";

  player.before = PlayerBefore; ! player.before override, see routine implementation
  player.parse_name = PlayerParseName; ! own teroutine that parses the player's name
  player.description = "Look at you. The author that came to Scotland to find inspiration. For some reason you feel like being stuck in a bad story now.";

  print "^Writer's block. The change of scenery was needed. Christmas is just around the corner, it's the 23rd of December 1986, and moving boxes are still piling up everywhere. A bit of chaos is fine. The seclusion out here makes up for it. You might even manage to write something during the contemplative days. How about a ghost story?^^";
];

[ TheDarkAdvanced;
  "You are surrounded by darkness. Some nastiness might drag you into the depths of hell.";
];

[ CreditsSub;
  print (string)Story, " is dedicated to Andreas Gustafsson.";
  print "^^~Night gathers, and now my watch begins. For this night and all the nights to come.~^^-- George R.R. Martin^   A Song of Ice and Fire";
  "^^Beta ghost hunters: Ant Stiller, Marco Innocenti, Soenke Wolfgramm, Fredrik Ramsberg, Johan Berntsson, Shawn Sijnstra.^^This game was created with PunyInform, a custom library by Fredrik Ramsberg and Johan Berntsson for Graham Nelson's Inform language. Parser grammar and library messages partly adapted from Dialog by Linus Akesson.";
];

[ XyzzySub;
  "You perceive a mysterious whisper. Coming from everywhere and nowhere, yet present, it says ~Nice try.~";
];

[ PlayerBefore;
    Attack, Cut:
      "As hopeless as the situation may be, this is never a way out.";
    default:
      rfalse;
];

[ PlayerParseName n;
		n=0;
		while (NextWord()=='me' or 'myself' or 'self' or 'yourself' or 'you' or 'Thomas') {n++;}
		return n;
];

[ CallSub;
  if (location ~= Solar) "There must be telephone nearby to call someone.";
  else {
    if (noun == 'Cora' or Cora) "There's no need to call your wife.";
    else "That's not a valid call recipient.";
  }
];

[ PushInOrderSub;
  "That's not something you can push in order.";
];

[ PushOrderErrorSub;
  print "If you want to push something in order, you need to add a sequence ";
  print "[push object in order 1234]";
  ".";
];

! game-specific grammar starts here
Verb 'call' * -> Call
            * noun -> Call
            * special -> Call;

Extend 'go' * 'to' noun -> Go;

Extend 'push' * noun 'in' 'order' special -> PushInOrder
              * noun 'in' 'order' -> PushOrderError;

Verb 'extinguish' * noun -> SwitchOff;

Verb 'ring' = 'call';
Verb 'dial' = 'call';
Verb 'play' = 'switch';
Verb 'hear' = 'listen';
Verb 'taste' = 'eat';

end;
