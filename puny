#!/bin/bash
# Puny BuildTools v2.0
# pi6 - the Inform 6 command-line wrapper
# (c) 2023 Stefan Vogt

# initial definitions
zversion=5

echo "puny CLI - the PunyInform floppy disk factory"
echo -e "Puny BuildTools 2.0, (c) 2023 Stefan Vogt\n"

while getopts ':iz:t:hoe' opt; do
  case "$opt" in
    i) # init project directory
      echo -e "initializing project directory [...]\n\n"
      exit 0
      ;;

    z) # Z-machine version
      arg="$OPTARG"
      if ! (( arg == 3 || arg == 5 )) ; then 
        echo -e "Z-machine version ${arg} is not supported.";
        exit 1;
      fi
      zversion=arg;
      echo "Z-machine version ${OPTARG} defined."
      #do something
      ;;

    t) # target processing
      arg="$OPTARG"
      echo "Processing target '${OPTARG}'"
      ;;

    h) # help menu
      echo -e "Synopsis: $(basename $0) [-switch] [-zversion value] [-target system]\n"
      echo "[switches]"
      echo "  -i    initialize project directory"
      echo "  -o    see full range of target systems"
      echo "  -e    show examples"
      echo -e "  -h    help menu\n"
      echo "[zversion value]"
      echo "  -z3    set Z-machine version 3"
      echo "  -z5    set Z-machine version 5 (XZIP)"
      echo -e "  (When not set, Z-machine v5 is applied.)\n"
      echo "[target system]"
      echo -e "  -t    create disk image for the system defined as argument\n"  
      exit 0
      ;;

    o) # targets
      echo -e "Target systems:"
      echo "Commodore 64: [-t c64]   Commodore Amiga: [-t amiga]    ZX Spectrum: [-t speccy]"
      #
      #echo -e "c64 apple2 bbc_acorn speccy amiga plus4 macintosh atari_st mega65 msx cpc_pcw c128 dos sam_coupe a8bit trs80_m3 trs80_m4

      # Z-machine version 3 only systems (enable if desired)
      #bash decrainbow.sh
      #bash kaypro.sh
      #bash osborne1.sh
      #bash trs_coco_dragon64.sh
      #bash vic20_pet.sh
      #bash oric.sh
      #bash ti99.sh\n"
      exit 0
      ;;

    :)
      echo -e "Option [-${OPTARG}] requires an argument.\n\nType: $(basename $0) [-h] for help.\n"
      exit 1
      ;;

    ?)
      echo -e "Invalid command option.\n\nType: $(basename $0) [-h] for help.\n"
      exit 1
      ;;
  esac
done

if [ $OPTIND -eq 1 ]; then echo -e "Nothing to be done. No options passed. Use [-h] for help."; fi
shift "$(($OPTIND -1))"

echo -e
exit 0;